//
//
//
// 0.1 Обговоримо базові методи запитів на сервер CRUD:
// C - Create (створити) [POST]
// R - Read (дістати, прочитати) [GET]
// U - Update (оновити) [PUT, PATCH]
// D - Delete (видалити) [DELETE]
//
//
//
// 0.2 Розглянемо яким чином ми виконуємо базові CRUD запити на наш маленький бек-енд
// Зробимо 4 види запитів і швиденько розглянемо яким чином бек-енд отримає ці дані.
// const data = {
//     name: 'Jake',
//     age: 30
// };
// fetch('http://localhost:3000/products', {
//     method: "PUT",
//     headers: { "Content-Type": "application/json" },
//     body: JSON.stringify(data)
// }).then(response => {
//     console.log({response});
//     return response.json();
// }).then(resData => {
//     console.log({resData});
// });
//
//
//
// УВАГА: при тестуванні CRUD операцій ми використовуємо FAKE API. Вона створена для тестування
// та в навчальних цілях і тому не дозволить нам вносити реальні зміни до бази даних, проте
// дасть нам можливість випробувати користування справжніми CRUD ендпоінтами в нашому скрипті.
//
// 0.3
// Для тестування CRUD операцій будемо використовувати тестову API jsonplaceholder.
// За допомогою Postman розглянемо принцип її робити щоб отримати розуміння яким чином нам
// працювати з нею в коді.
// https://jsonplaceholder.typicode.com/users
//
//
// 1. POST
// Зробимо запит на створення сутності з даними нашого користовувача Jake.
//
//
//
// 2. GET
// Отримаємо дані про користувача по його ID. Також отримаємо дані всіх користувачів одразу
// Будемо виводити ці дані на сторінку для користувача.
//
//
//
// 3. PUT/PATCH
// Оновимо дані одного з користувачів по його ID. Спробуємо повністю оновити всі дані сутності
// а також оновити окремі поля. Використовуємо PUT для повного оновлення і PATCH для часткового.
//
//
//
// 4. DELETE
// Видалимо дані про одного з користувачів
//
//
//
// 5. Спробуємо створити невеличку інформаційну сторінку для адміністрування постів користувача.
// Виконуємо завдання ітераційно, по кроках:
// 6.1 Завантажимо всі дані про існуючі пости та виведемо їх (збережемо дані у змінній)
// 6.2 Дамо можливість нашому адміністратору додавати нові пости.
// 6.3 Дамо можливість нашому адміністратору видаляти пости.
// *6.4(якщо встигнемо) спробуємо реалізувати функціонал для зміни параметрів окремого поста.
//
//
// 